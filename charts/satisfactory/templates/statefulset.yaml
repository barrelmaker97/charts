---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "satisfactory.fullname" . }}
  labels:
    {{- include "satisfactory.labels" . | nindent 4 }}
spec:
  replicas: 1
  serviceName: {{ include "satisfactory.fullname" . }}
  selector:
    matchLabels:
      {{- include "satisfactory.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      annotations:
        checksum/configmap: {{ include (print $.Template.BasePath "/configmap.yaml") $ | sha256sum }}
      {{- with .Values.podAnnotations }}
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "satisfactory.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "satisfactory.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: game-port-udp
              containerPort: {{ .Values.satisfactoryOpts.serverGamePort }}
              protocol: UDP
            - name: game-port-tcp
              containerPort: {{ .Values.satisfactoryOpts.serverGamePort }}
              protocol: TCP
          startupProbe:
            exec:
              command:
                - /home/steam/healthcheck.sh
            failureThreshold: 10
          livenessProbe:
            exec:
              command:
                - /home/steam/healthcheck.sh
          readinessProbe:
            exec:
              command:
                - /home/steam/healthcheck.sh
          {{- if .Values.env }}
          env:
            {{- toYaml .Values.env | nindent 12 }}
          {{- end }}
          envFrom:
            - configMapRef:
                name: {{ include "satisfactory.fullname" . }}-env
            {{- if .Values.envFrom }}
            {{- toYaml .Values.envFrom | nindent 12 }}
            {{- end }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
            - name: savedata
              mountPath: /config
            {{- if .Values.certificate.enabled }}
            - name: certificate
              mountPath: /config/gamefiles/FactoryGame/Certificates
              readOnly: true
            {{- end }}
      {{- if .Values.certificate.enabled }}
      volumes:
        - name: certificate
          secret:
            secretName: {{ include "satisfactory.fullname" . }}
            items:
              - key: tls.crt
                path: cert_chain.pem
              - key: tls.key
                path: private_key.pem
      {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
  volumeClaimTemplates:
    - metadata:
        name: savedata
      spec:
        {{- if .Values.persistence.storageClassName }}
        storageClassName: {{ .Values.persistence.storageClassName }}
        {{- end }}
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: {{ .Values.persistence.size }}
